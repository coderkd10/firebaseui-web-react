ARG LIB_BUILDER_NODE_VERSION=20
ARG EXAMPLE_NODE_VERSION=16

FROM node:${LIB_BUILDER_NODE_VERSION} as lib-builder
USER node
WORKDIR /home/node/lib
COPY --chown=node package.json ./
COPY --chown=node package-lock.json ./
RUN npm install
COPY --chown=node . ./
RUN npm run clean
RUN npm run build
RUN npm pack ./dist


FROM node:${EXAMPLE_NODE_VERSION}
RUN apt update

USER node
WORKDIR /home/node/app

# copy package.json and package-lock.json
COPY --chown=node example/package.json ./example/
RUN cd example && npm install

# copy example src files
COPY --chown=node example ./example
# add firebase config
COPY <<-EOT ./example/src/firebase-config.json
{
    "status": "success",
    "result": {
      "sdkConfig": {
        "projectId": "learning-app-e439f",
        "appId": "1:175285642109:web:acf57532744814f1592214",
        "storageBucket": "learning-app-e439f.appspot.com",
        "apiKey": "AIzaSyDBIZounpofT12CtvYa1DRGsimcdrK5wN8",
        "authDomain": "learning-app-e439f.firebaseapp.com",
        "messagingSenderId": "175285642109",
        "measurementId": "G-PEWRTCSGJ9"
      }
    }
}
EOT

# install lib locally
COPY --chown=node --from=lib-builder /home/node/lib/react-firebaseui-6.0.0.tgz .
RUN cd example && npm install ../react-firebaseui-6.0.0.tgz

# build example
RUN cd example && npm run build

# start the static server
EXPOSE 8000
CMD [ "python3", "-m", "http.server", "--directory", "example/public", "8000" ]
